"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const express_1 = require("express");
const authcontroller_1 = require("../controllers/authcontroller");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const usercontroller_1 = require("../controllers/usercontroller");
const permisioncontroller_1 = require("../controllers/permisioncontroller");
const rolecontroller_1 = require("../controllers/rolecontroller");
const productcontoller_1 = require("../controllers/productcontoller");
const role_seeder_1 = require("../seeders/role.seeder");
const product_seeder_1 = require("../seeders/product.seeder");
const imagecontroller_1 = require("../controllers/imagecontroller");
const order_seeder_1 = require("../seeders/order.seeder");
const ordercontroller_1 = require("../controllers/ordercontroller");
const permision_middleware_1 = require("../middlewares/permision.middleware");
const router = async (router) => {
    router.get("/seed/permisions", role_seeder_1.seedPerms);
    router.get("/seed/products", product_seeder_1.seedProducts);
    router.get("/seed/orders", order_seeder_1.seedOrders);
    router.post("/api/register", authcontroller_1.register);
    router.post("/api/login", authcontroller_1.login);
    router.get("/api/user", auth_middleware_1.authMiddlware, authcontroller_1.authenticatedUser);
    router.post("/api/logout", auth_middleware_1.authMiddlware, authcontroller_1.logoutUser);
    router.put("/api/user/info", auth_middleware_1.authMiddlware, authcontroller_1.updateInfo);
    router.patch("/api/user/info", auth_middleware_1.authMiddlware, authcontroller_1.updatePassword);
    router.post("/api/upload", auth_middleware_1.authMiddlware, imagecontroller_1.uploadImgae);
    router.get("/api/users", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('users'), usercontroller_1.fetchAllUsers);
    router.post("/api/users", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('users'), usercontroller_1.createUsers);
    router.get("/api/users/:id", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('users'), usercontroller_1.fetchOneUsers);
    router.put("/api/users/:id", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('users'), usercontroller_1.updateUsers);
    router.delete("/api/users/:id", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('users'), usercontroller_1.deleteUsers);
    router.get("/api/total-users", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('users'), usercontroller_1.totalUsers);
    router.get("/api/permisions", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('roles'), permisioncontroller_1.Permisions);
    router.get("/api/roles", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('roles'), rolecontroller_1.roles);
    router.get("/api/roles/:id", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('roles'), rolecontroller_1.getRolesByID);
    router.post("/api/roles", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('roles'), rolecontroller_1.creatRoles);
    router.put("/api/roles/:id", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('roles'), rolecontroller_1.updateRoles);
    router.delete("/api/roles/:id", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('roles'), rolecontroller_1.deleteRoles);
    router.get("/api/products", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), productcontoller_1.fetchAllProducts);
    router.post("/api/products", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), productcontoller_1.createProduct);
    router.get("/api/products/:id", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), productcontoller_1.fetchOneProduct);
    router.put("/api/products/:id", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), productcontoller_1.updateProduct);
    router.delete("/api/products/:id", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), productcontoller_1.deleteProduct);
    router.use('/api/upload', auth_middleware_1.authMiddlware, (0, express_1.static)('./uploads'));
    router.get("/api/orders", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), ordercontroller_1.fetchAllOrders);
    router.post("/api/export", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), ordercontroller_1.exportCSV);
    router.get("/api/chart", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), ordercontroller_1.chartData);
    router.get("/api/top-products", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), ordercontroller_1.topProductsData);
    router.get("/api/total-orders", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), ordercontroller_1.totalOrders);
    router.get("/api/total-profits", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), ordercontroller_1.fetchProfitData);
    router.get("/api/total-orders-chart", auth_middleware_1.authMiddlware, await (0, permision_middleware_1.permisionMiddleware)('products'), ordercontroller_1.totalOrdersChart);
};
exports.router = router;
